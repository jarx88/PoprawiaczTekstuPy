name: Build Windows EXE

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Umo≈ºliwia rƒôczne uruchomienie

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read
      attestations: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}-v2
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U -r requirements.txt
        
    - name: Install PyInstaller
      run: |
        pip install -U pyinstaller

    - name: Write build version metadata
      shell: pwsh
      run: |
        $shortSha = "${{ github.sha }}".Substring(0,7)
        $version = "build-${{ github.run_number }}-$shortSha"
        Set-Content -Path VERSION -Value $version
        "POPRAWIACZTEKSTUPY_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        Write-Host "üì¶ Build version: $version"
        
    - name: Clean build directories and PyInstaller cache
      run: |
        if exist build rmdir /s /q build
        if exist dist rmdir /s /q dist
        if exist %LOCALAPPDATA%\pyinstaller rmdir /s /q %LOCALAPPDATA%\pyinstaller
        if exist %APPDATA%\pyinstaller rmdir /s /q %APPDATA%\pyinstaller
      shell: cmd
        
    - name: Build Windows executable (Release)
      run: |
        pyinstaller --clean --noconfirm popraw_tekst_corrector.spec
        
    - name: Sign executable (optional)
      continue-on-error: true
      env:
        CODE_SIGNING_CERT: ${{ secrets.CODE_SIGNING_CERT }}
        CODE_SIGNING_PASSWORD: ${{ secrets.CODE_SIGNING_PASSWORD }}
      run: |
        if ([string]::IsNullOrEmpty($env:CODE_SIGNING_CERT)) {
          Write-Host "‚ö†Ô∏è No code signing certificate configured - skipping signing"
          exit 0
        }
        
        # Decode certificate from base64
        $certBytes = [Convert]::FromBase64String($env:CODE_SIGNING_CERT)
        [IO.File]::WriteAllBytes("cert.p12", $certBytes)
        
        # Sign the executable
        & "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe" sign /f cert.p12 /p $env:CODE_SIGNING_PASSWORD /t http://timestamp.digicert.com /fd SHA256 "dist\popraw_tekst_corrector.exe"
        
        # Clean up certificate
        Remove-Item cert.p12
        
        Write-Host "‚úÖ Executable signed successfully"
        
    - name: Test executable exists
      run: |
        if (Test-Path "dist/popraw_tekst_corrector.exe") {
          Write-Host "‚úÖ Release executable created successfully"
          Get-Item "dist/popraw_tekst_corrector.exe" | Select-Object Name, Length, LastWriteTime
          
          # Check if executable is signed
          $signature = Get-AuthenticodeSignature "dist/popraw_tekst_corrector.exe"
          if ($signature.Status -eq "Valid") {
            Write-Host "‚úÖ Executable is digitally signed"
            Write-Host "Signer: $($signature.SignerCertificate.Subject)"
          } else {
            Write-Host "‚ö†Ô∏è Executable is not signed (will trigger SmartScreen)"
          }
        } else {
          Write-Host "‚ùå Release executable not found"
          exit 1
        }
        
    - name: Generate build provenance attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: 'dist/popraw_tekst_corrector.exe'
        
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: popraw-tekst-corrector-windows
        path: dist/popraw_tekst_corrector.exe
        retention-days: 30
        
    - name: Upload build logs (if failed)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          build/
          *.log
        retention-days: 7

